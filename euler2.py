'''
@author: stanek
'''

'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''

import time


def euler2(end):
    sum_of_even = 0
    previous = 1
    current = 2
    while current < end:
        if current % 2 == 0:
            sum_of_even += current
        next_number = current + previous
        previous = current
        current = next_number
    return sum_of_even


'''
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?
'''


def euler3(number):
    largest = 1
    for n in range(2, 500000):
        if number % n == 0:
            largest = n
            number = number / n
    return largest


'''
2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.

What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
'''


def euler4(end):
    previous_smallest = 1
    smallest = 1
    for curr in range(1, end):
        while smallest % curr != 0:
            smallest += previous_smallest
        previous_smallest = smallest
    return smallest


'''
There exists exactly one Pythagorean triplet for which a + b + c = 1000.
Find the product abc.
0.00017s
'''


def euler9():
    for b in range(1, 500):
        a = (500000 - 1000 * b) / (1000 - b)
        if a % 1 == 0:
            print(b * a * (1000 - a - b))


'''
0.02337s
'''


def euler9bis():
    # for c in range(250, 500):
    #     for b in range(0, c):
    #         a = 1000 - c - b
    #         if a * a + b * b == c * c:
    #             return a * b * c
    return ((1000 - c - b) * b * c for c in range(250, 500) for b in range(0, c) if
            (1000 - c - b) ** 2 + b * b == c * c)


def euler19():
    n = 2 ** 1000
    s = str(n)
    result = 0
    for c in s:
        result += int(c)
    return result


def euler48():
    result = 0
    for i in range(1, 1001):
        result += i ** i
    return str(result)[-10:]


def euler22():
    d = list()
    with open("names.txt", encoding='utf-8') as pattern_file:
        for line in pattern_file:
            for word in line.split(','):
                d.append(word.replace("\"", ""))

    counter = 1
    sum_of_values = 0

    d.sort()
    for word in d:
        word_value = 0
        print(counter, end=" ")
        print(word, end=" ")
        for letter in word:
            word_value += ord(letter) - 64
        print(word_value)
        sum_of_values += word_value * counter
        counter += 1

    return sum_of_values



if __name__ == '__main__':
    # print(euler2(4000000))
    # print(euler3(600851475143))
    # print(euler4(20))
    # print(next(euler9bis()))
    euler9()
